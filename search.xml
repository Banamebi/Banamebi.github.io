<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue+json实现数据导入</title>
      <link href="2020/10/11/vue+json%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AF%BC%E5%85%A5/"/>
      <url>2020/10/11/vue+json%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AF%BC%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="step-0-准备"><a href="#step-0-准备" class="headerlink" title="step 0 准备"></a>step 0 准备</h2><p>(此例子为用户管理系统)<br>template中的代码为：</p><pre><code>&lt;template&gt;  &lt;div class=&quot;customers container&quot;&gt;   &lt;h1 class=&quot;page-header&quot;&gt;用户管理系统&lt;/h1&gt;     &lt;table class=&quot;table table-striped&quot;&gt;        &lt;thead&gt;           &lt;tr&gt;               &lt;th&gt;编号&lt;/th&gt;                   &lt;th&gt;姓名&lt;/th&gt;              &lt;th&gt;年龄&lt;/th&gt;                          &lt;/tr&gt;         &lt;/thead&gt;         &lt;tbody&gt;           &lt;tr v-for=&quot;customer in customers&quot; v-bind:key=&quot;customer&quot;&gt;             &lt;td&gt;&#123;&#123;customer.id&#125;&#125; &lt;/td&gt;                &lt;td&gt;&#123;&#123;customer.name&#125;&#125; &lt;/td&gt;                &lt;td&gt;&#123;&#123;customer.age&#125;&#125; &lt;/td&gt;                     &lt;/tr&gt;           &lt;/tbody&gt;         &lt;/table&gt;           &lt;/div&gt;        &lt;/template&gt;</code></pre><p>还要自己准备一个json文件，储存数据。</p><pre><code>&#123;    &quot;data1&quot;:&#123;        &quot;id&quot;: &quot;001&quot;,         &quot;name&quot;: &quot;LiLy&quot;,          &quot;age&quot;: 24               &#125;,           &quot;data2&quot;: &#123;            &quot;id&quot;: &quot;002&quot;,             &quot;name&quot;: &quot;Jack&quot;,               &quot;age&quot;: 25    &#125;,     &quot;data3&quot;: &#123;              &quot;id&quot;: &quot;003&quot;,                &quot;name&quot;: &quot;Mike&quot;,                 &quot;age&quot;: 27    &#125;,       &quot;data4&quot;: &#123;            &quot;id&quot;: &quot;004&quot;,             &quot;name&quot;: &quot;Sara&quot;,              &quot;age&quot;: 21           &#125;     &#125;</code></pre><h2 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h2><p>在存有json文件的文件夹中git bash（或cmd cd到该文件路径下）</p><pre><code>npm run json:server</code></pre><p><img src="https://img-blog.csdnimg.cn/20201011092841525.png?x-oss-process=image,t_70#pic_center" alt="在这里插入图片描述">得到端口</p><pre><code>http://localhost:3000</code></pre><p>将其在网页中打开，再后面添上要导入的json文件名</p><pre><code>http://localhost:3000/db</code></pre><p><img src="https://img-blog.csdnimg.cn/20201011093325307.png?x-oss-process=imaget_70#pic_center" alt="在这里插入图片描述"></p><h2 id="step2-vue中添加方法和函数"><a href="#step2-vue中添加方法和函数" class="headerlink" title="step2 vue中添加方法和函数"></a>step2 vue中添加方法和函数</h2><pre><code>&lt;script&gt;export default &#123;  name: &#39;customers&#39;,   data () &#123;     return &#123;      customers:[]      &#125;   &#125;,     methods:&#123;        fetchCustomers()&#123;         this.$http.get(&quot;http://localhost:3000/db&quot;)         .then(function(response)&#123;            this.customers=response.body;           &#125;)        &#125;      &#125;,     created()&#123;       this.fetchCustomers();      &#125;    &#125;    &lt;/script&gt;</code></pre><p>再在cmd中输入<code>cnpm install vue-resource --save</code><br><img src="https://img-blog.csdnimg.cn/2020101109483552.png#pic_center" alt="在这里插入图片描述"></p><h2 id="step-3-main-js中的添加"><a href="#step-3-main-js中的添加" class="headerlink" title="step 3 main.js中的添加"></a>step 3 main.js中的添加</h2><pre><code>import VueResource from &#39;vue-resource&#39;</code></pre><pre><code>Vue.use(VueResource)</code></pre><p>最终效果<br><img src="https://img-blog.csdnimg.cn/20201011095101574.png?x-oss-process=image#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> VUE </tag>
            
            <tag> json </tag>
            
            <tag> 数据交互 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置json-server</title>
      <link href="2020/09/28/%E9%85%8D%E7%BD%AEjson-server/"/>
      <url>2020/09/28/%E9%85%8D%E7%BD%AEjson-server/</url>
      
        <content type="html"><![CDATA[<pre><code>npm install -g joson-server</code></pre><p><img src="https://img-blog.csdnimg.cn/20200928083908147.png#pic_center"></p><p>创建一个放json文件的文件夹，然后cd到路径内<br>初始化一个名为package的json文件</p><pre><code>npm init</code></pre><p><img src="https://img-blog.csdnimg.cn/20200928084014439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center">选项为：enter enter 描述自定义 enter enter enter enter enter enter enter</p><p>再来装一下json-server模块并保存数据</p><pre><code>npm install json-server --save</code></pre><p><img src="https://img-blog.csdnimg.cn/2020092808564123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center"></p><p>在文件夹中再创建一个db.json，内容自定义，最好包含多个属性。</p><p>将package.json中script下的内容改为</p><pre><code>&quot;json:server&quot;: &quot;json-server --watch db.json&quot;</code></pre><p>如图<br><img src="https://img-blog.csdnimg.cn/20200928084712254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center"></p><p>回到cmd中运行</p><pre><code>npm run json:server</code></pre><p>结果<br><img src="https://img-blog.csdnimg.cn/20200928085753892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center"></p><p>最后可以在浏览器中通过地址查询想要的数据。</p>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> json </tag>
            
            <tag> cmd </tag>
            
            <tag> json-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JQuery notes</title>
      <link href="2020/09/26/JQuery%20notes/"/>
      <url>2020/09/26/JQuery%20notes/</url>
      
        <content type="html"><![CDATA[<h2 id="0-储备知识"><a href="#0-储备知识" class="headerlink" title="0.储备知识"></a>0.储备知识</h2><p>基本语法：<code>$(selector).action()</code><br>文档就绪：<code>$(document).ready(function()&#123;&#125;);</code>或<code>$(function()&#123;&#125;);</code><br>选择器：<code>$(&quot;p&quot;)</code></p><h2 id="1-事件"><a href="#1-事件" class="headerlink" title="1.事件"></a>1.事件</h2><ul><li>鼠标事件 :click、dbclick、hover、mouseenter、mouseleave</li></ul><p>例：</p><pre><code>$(selector).click(function)or$(selector).click()</code></pre><ul><li>键盘事件：keypress、keydown、keyup<br>例：</li></ul><pre><code>$(selector).keypress(function)or$(selector).keypress()</code></pre><ul><li>表单事件：submit、change、focus、blur<br>例：</li></ul><pre><code>$(selector).submit(function)or$(selector).submit()</code></pre><ul><li><p>文档/窗口事件：load、unload、resize、scroll<br>例：<code>$(selector).load(function)</code></p><h2 id="2-效果"><a href="#2-效果" class="headerlink" title="2.效果"></a>2.效果</h2></li><li><p>隐藏和显示<code>hide();show()</code></p></li><li><p>fading: <code>fadeIn();fadeOut();fadeToggle();fadeTo()</code></p></li><li><p>滑动：<code>slideDown()；slideUp()；slideToggle()</code></p></li><li><p>动画：<code>animate();stop()</code></p><h2 id="3-HTML操作"><a href="#3-HTML操作" class="headerlink" title="3.HTML操作"></a>3.HTML操作</h2></li><li><p>捕获:<code>text();html();val();attr()</code></p></li><li><p>设置：<code>text();html();val();attr()</code></p></li><li><p>增删：<code>append() ；prepend() ；after() ；before()；remove() ；empty()</code></p><h2 id="4-CSS操作"><a href="#4-CSS操作" class="headerlink" title="4.CSS操作"></a>4.CSS操作</h2></li></ul><ul><li>类：<code>addClass()；removeClass()；toggleClass() ；css()</code></li><li>方法：</li></ul><pre><code>css(&quot;propertyname&quot;);orcss(&quot;propertyname&quot;,&quot;value&quot;);orcss(&#123;&quot;propertyname&quot;:&quot;value&quot;,&quot;propertyname&quot;:&quot;value&quot;,...&#125;);</code></pre><ul><li><p>尺寸 ：<code>width()；height()；innerWidth()；innerHeight()；outerWidth()；outerHeight()</code></p><h2 id="5-遍历"><a href="#5-遍历" class="headerlink" title="5.遍历"></a>5.遍历</h2></li><li><p>祖先：<code>parent();parents();parentsUntil()</code></p></li><li><p>后代：<code>children();find();</code></p></li><li><p>兄弟：<code>siblings();next();nextALL();nextUntil()</code></p></li><li><p>过滤：<code>first();last();eq(n);filter();not()</code></p><h2 id="6-AJAX操作"><a href="#6-AJAX操作" class="headerlink" title="6.AJAX操作"></a>6.AJAX操作</h2></li><li><p><code>$(selector).load(URL,data,callback);</code></p></li><li><p><code>$.get(URL,callback);</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JQuery </tag>
            
            <tag> notes </tag>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建vue脚手架</title>
      <link href="2020/09/26/%E6%90%AD%E5%BB%BAvue%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
      <url>2020/09/26/%E6%90%AD%E5%BB%BAvue%E8%84%9A%E6%89%8B%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="STEPS"><a href="#STEPS" class="headerlink" title="STEPS"></a>STEPS</h1><h2 id="0-检查已配置的环境"><a href="#0-检查已配置的环境" class="headerlink" title="0.检查已配置的环境"></a>0.检查已配置的环境</h2><p>打开cmd，输入：</p><pre><code>node -vnpm -v</code></pre><p><img src="https://img-blog.csdnimg.cn/20200926090156597.png#pic_center" alt="输出版本号即成功。"></p><h2 id="1-找到要搭建的路径"><a href="#1-找到要搭建的路径" class="headerlink" title="1.找到要搭建的路径"></a>1.找到要搭建的路径</h2><p>例：</p><pre><code>cd D:\work\code\vscode\projects</code></pre><p>注意：cd后面有空格<br>如果默认是c盘路径，先输入d:进入d盘</p><h2 id="2-搭建"><a href="#2-搭建" class="headerlink" title="2.搭建"></a>2.搭建</h2><pre><code>vue init webpack pro</code></pre><p>pro为文件名，可自定义<br><img src="https://img-blog.csdnimg.cn/20200926091304321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center"><br>选项为：enter enter enter enter no no no no enter</p><p><img src="https://img-blog.csdnimg.cn/20200926091711797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center" alt="安装成功！"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>cd到pro文件夹下</p><pre><code>cd D:\work\code\vscode\projects\pro</code></pre><pre><code>npm run dev</code></pre><p><img src="https://img-blog.csdnimg.cn/20200926092043467.png#pic_center" alt="成功">将这个地址在浏览器中打开</p><p><img src="https://img-blog.csdnimg.cn/20200926092221442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzOTc3ODI5,size_16,color_FFFFFF,t_70#pic_center" alt="成功"></p>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VUE </tag>
            
            <tag> 脚手架 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/25/hello-world/"/>
      <url>2020/09/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
